/*

Permutations
Medium
18.3K
295
company
Amazon
company
Google
company
Adobe
Given an array nums of distinct integers, return all the possible permutations. You can return the answer in any order.

 

Example 1:

Input: nums = [1,2,3]
Output: [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]
Example 2:

Input: nums = [0,1]
Output: [[0,1],[1,0]]
Example 3:

Input: nums = [1]
Output: [[1]]

*/

class Solution {
public:
    vector<vector<int>> res;

    void solve(int index, vector<int> &nums) {
        if(index==nums.size())
        {
            res.push_back(nums);
            return;
        }

        for(int j=index; j<nums.size(); j++) {
            swap(nums[index], nums[j]);
            solve(index+1, nums);
            swap(nums[index], nums[j]); // send nums back as it was
        }
    }

    vector<vector<int>> permute(vector<int>& candidates) {
        solve(0, candidates);
        return res;        
    }
};
